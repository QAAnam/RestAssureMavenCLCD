<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-19T01:44:27 IST" name="Default suite" finished-at="2023-07-19T01:44:33 IST" duration-ms="6263">
    <groups>
    </groups>
    <test started-at="2023-07-19T01:44:27 IST" name="Default test" finished-at="2023-07-19T01:44:33 IST" duration-ms="6263">
      <class name="practice.Practice">
        <test-method signature="getHeaders()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:27 IST" name="getHeaders" finished-at="2023-07-19T01:44:31 IST" duration-ms="3529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHeaders -->
        <test-method signature="getRequst()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:31 IST" name="getRequst" finished-at="2023-07-19T01:44:31 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequst -->
        <test-method signature="getResponsewithReq()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:31 IST" name="getResponsewithReq" finished-at="2023-07-19T01:44:31 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponsewithReq -->
        <test-method signature="postAsFileAndAlsoRead()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:31 IST" name="postAsFileAndAlsoRead" finished-at="2023-07-19T01:44:32 IST" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postAsFileAndAlsoRead -->
        <test-method signature="postAsFileAndAlsoReadAndReplace()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:32 IST" name="postAsFileAndAlsoReadAndReplace" finished-at="2023-07-19T01:44:32 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postAsFileAndAlsoReadAndReplace -->
        <test-method signature="postBodyAsJsonFile()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:32 IST" name="postBodyAsJsonFile" finished-at="2023-07-19T01:44:32 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postBodyAsJsonFile -->
        <test-method signature="postBodyAsMapHashMap()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:32 IST" name="postBodyAsMapHashMap" finished-at="2023-07-19T01:44:33 IST" duration-ms="1014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postBodyAsMapHashMap -->
        <test-method signature="postBodyAsMapHashMapOnLittleMoreComplex()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:33 IST" name="postBodyAsMapHashMapOnLittleMoreComplex" finished-at="2023-07-19T01:44:33 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postBodyAsMapHashMapOnLittleMoreComplex -->
        <test-method signature="postBodyAsMapHashMapOnLittleMoreComplexUsingJsonLibrarayFromOrgdotJson()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:33 IST" name="postBodyAsMapHashMapOnLittleMoreComplexUsingJsonLibrarayFromOrgdotJson" finished-at="2023-07-19T01:44:33 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postBodyAsMapHashMapOnLittleMoreComplexUsingJsonLibrarayFromOrgdotJson -->
        <test-method signature="postBodyAsString()[pri:0, instance:practice.Practice@64cd705f]" started-at="2023-07-19T01:44:33 IST" name="postBodyAsString" finished-at="2023-07-19T01:44:33 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postBodyAsString -->
      </class> <!-- practice.Practice -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
